{"version":3,"file":"init.js","names":["_es6Promise","_interopRequireDefault","require","_path","_prompt","_lodash","_utils","e","__esModule","default","es6promise","polyfill","configFile","path","join","process","cwd","name","description","pattern","message","required","s3bucket","s3prefix","s3region","iosIdentifier","androidIdentifier","update","schema","properties","ios_identifier","android_identifier","urlSchema","content_url","execute","context","prompt","override","argv","delimiter","start","result","getInput","then","validateBucket","res","getUrl","url","_","assign","content","writeFile","done","omit","region","bucket","getContentUrl","err","console","log"],"sources":["../src/init.js"],"sourcesContent":["import es6promise from 'es6-promise';\n\nes6promise.polyfill();\n\nimport path from 'path';\nimport prompt from 'prompt';\nimport _ from 'lodash';\n\nimport { getInput, writeFile } from './utils';\n\nconst configFile = path.join(process.cwd(), 'cordova-hcp.json');\n\nconst name = {\n  description: 'Enter project name (required)',\n  pattern: /^[a-zA-Z\\-\\s0-9]+$/,\n  message: 'Name must be only letters, numbers, space or dashes',\n  required: true,\n};\n\nconst s3bucket = {\n  description: 'Amazon S3 Bucket name (required for cordova-hcp deploy)',\n  pattern: /^[a-zA-Z\\-0-9\\.]+$/,\n  message: 'Name must be only letters, numbers, or dashes',\n};\n\nconst s3prefix = {\n  description: 'Path in S3 bucket (optional for cordova-hcp deploy)',\n  pattern: /^[a-zA-Z\\-\\s0-9\\.\\/]+\\/$/,\n  message: 'Path must be only letters, numbers, spaces, forward slashes or dashes and must end with a forward slash',\n};\n\nconst s3region = {\n  description: 'Amazon S3 region (required for cordova-hcp deploy)',\n  pattern: /^(us-east-1|us-west-2|us-west-1|eu-west-1|eu-central-1|ap-southeast-1|ap-southeast-2|ap-northeast-1|sa-east-1)$/,\n  default: 'us-east-1',\n  message: 'Must be one of: us-east-1, us-west-2, us-west-1, eu-west-1, eu-central-1, ap-southeast-1, ap-southeast-2, ap-northeast-1, sa-east-1',\n};\n\nconst iosIdentifier = {\n  description: 'IOS app identifier',\n  pattern: /^[a-zA-Z\\-0-9\\.]+$/,\n};\n\nconst androidIdentifier = {\n  description: 'Android app identifier',\n  pattern: /^[a-zA-Z\\-0-9\\.]+$/,\n};\n\nconst update = {\n  description: 'Update method (required)',\n  pattern: /(start|resume|now)/,\n  required: true,\n  message: 'Needs to be one of start, resume or now',\n  default: 'resume',\n};\n\nconst schema = {\n  properties: {\n    name,\n    s3bucket,\n    s3prefix,\n    s3region,\n    ios_identifier: iosIdentifier,\n    android_identifier: androidIdentifier,\n    update,\n  },\n};\n\nconst urlSchema = {\n  properties: {\n    content_url: {\n      description: 'Enter full URL to directory where cordova-hcp build result will be uploaded',\n      message: 'Must supply URL',\n      required: true,\n    },\n  },\n};\n\nexport function execute(context) {\n  prompt.override = context.argv;\n  prompt.message = 'Please provide';\n  prompt.delimiter = ': ';\n  prompt.start();\n\n  let result;\n\n  getInput(prompt, schema)\n    .then(validateBucket)\n    .then(res => result = res)\n    .then(getUrl)\n    .then(url => _.assign(result, url))\n    .then(content => writeFile(configFile, content))\n    .then(done);\n}\n\nfunction validateBucket(result) {\n  if (!result.s3bucket) {\n    return _.omit(result, ['s3region', 's3bucket', 's3prefix']);\n  }\n\n  return result;\n}\n\nfunction getUrl({ s3region: region, s3bucket: bucket, s3prefix: path }) {\n  if (!bucket) {\n    return getInput(prompt, urlSchema);\n  }\n\n  return { content_url: getContentUrl(region, bucket, path) };\n}\n\nfunction getContentUrl(region, bucket, path) {\n  let url = region === 'us-east-1' ? 's3.amazonaws.com' : `s3-${region}.amazonaws.com`;\n  url = `https://${url}/${bucket}`\n\n  if (path) {\n    url += `/${path}`;\n  }\n\n  return url;\n}\n\nfunction done(err) {\n  if (err) {\n    return console.log(err);\n  }\n  console.log('Project initialized and cordova-hcp.json file created.');\n  console.log('If you wish to exclude files from being published, specify them in .chcpignore');\n  console.log('Before you can push updates you need to run \"cordova-hcp login\" in project directory');\n}\n"],"mappings":"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","ignoreList":[]}